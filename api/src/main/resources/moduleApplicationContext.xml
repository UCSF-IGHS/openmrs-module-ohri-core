<?xml version="1.0" encoding="UTF-8"?>

<!-- Beans to add to the current Application context definition -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  		    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  		    http://www.springframework.org/schema/context
  		    http://www.springframework.org/schema/context/spring-context-3.0.xsd
  		    http://www.springframework.org/schema/jee
  		    http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
  		    http://www.springframework.org/schema/tx
  		    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
  		    http://www.springframework.org/schema/aop
  		    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
  		    http://www.springframework.org/schema/util
  		    http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <context:component-scan base-package="org.openmrs.module.ohricore"/>



    <!--  **************************  SERVICE CONTEXT CONFIGURATION  *************************  -->
    <!-- Services accessible via Context.getService() -->
    <bean id="encounterService"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager" />
        </property>
        <property name="target">
            <bean class="${project.parent.groupId}.${project.parent.artifactId}.api.impl.EncounterServiceImpl">
                <property name="dao">
                    <bean class="${project.parent.groupId}.${project.parent.artifactId}.api.db.hibernate.HibernateEncounterDAO">
                        <property name="sessionFactory">
                            <ref bean="sessionFactory" />
                        </property>
                    </bean>
                </property>
            </bean>
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors" />
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource" />
        </property>
    </bean>

    <bean parent="serviceContext">
        <property name="moduleService">
            <list merge="true">
                <value>${project.parent.groupId}.${project.parent.artifactId}.api.EncounterService</value>
                <ref local="encounterService"/>
            </list>
        </property>
    </bean>







    <!-- Wraps OHRICoreService methods in DB transactions and OpenMRS interceptors,
    which set audit info like dateCreated, changedBy, etc.-->
    <bean id="ohricore.OHRICoreService"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <bean class="org.openmrs.module.ohricore.api.impl.OHRICoreServiceImpl">
                <property name="dao" ref="ohricore.OHRICoreDao"/>
            </bean>
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <!-- Adds OHRICoreService to OpenMRS context so it can be accessed
    calling Context.getService(OHRICoreService.class) -->
    <bean parent="serviceContext">
        <property name="moduleService">
            <list>
                <value>org.openmrs.module.ohricore.api.OHRICoreService</value>
                <ref bean="ohricore.OHRICoreService"/>
            </list>
        </property>
    </bean>

    <!--  **************************  SERVICE INTERCEPTORS  *************************  -->
    <!-- AOP after Running Advice that intercepts an encounter and updates a concept based on other concepts -->
    <bean id="encounterInterceptor" class="org.openmrs.module.ohricore.aop.EncounterInterceptorAdvice"/>

</beans>
